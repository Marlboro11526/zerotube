name: GitHub Actions CI
on: [pull_request]

jobs:
  beta: # this can be changed to stable once async is available
    name: beta

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # windows-latest disabled until sqlite install works...

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: beta
        override: true

    - name: Sqlite (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install sqlite3 libsqlite3-dev
    
    - name: Build
      working-directory: ./backend
      run: cargo build --verbose
    - name: Test
      working-directory: ./backend
      run: cargo test --verbose

  nightly:
    name: nightly

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # windows-latest disabled until sqlite install works...

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true

    - name: Sqlite (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install sqlite3 libsqlite3-dev

    - name: Build
      working-directory: ./backend
      run: cargo build --verbose

    - name: Test
      working-directory: ./backend
      run: cargo test --verbose

  lint:
    name: lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - name: Format check
      working-directory: ./backend
      run: cargo fmt --all -- --check

    - name: Clippy
      working-directory: ./backend
      run: cargo clippy -- -D warnings
