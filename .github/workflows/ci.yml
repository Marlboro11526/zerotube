name: GitHub Actions CI
on: [push, pull_request]

jobs:
  beta: # this can be changed to stable once async is available
    name: beta

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: beta
        override: true

    - name: Sqlite (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install sqlite3 libsqlite3-dev

    - name: Sqlite (windows)
      if: matrix.os == 'windows-latest'
      run: |
          choco install 7zip
          mkdir C:\sqlite
          CD /D C:\sqlite
          curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
          7z e sqlite3.zip -y
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
          set PATH=%PATH%;C:\sqlite
    
    - name: Build
      working-directory: ./backend
      run: cargo build --verbose
    - name: Test
      working-directory: ./backend
      run: cargo test --verbose

  nightly:
    name: nightly

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true

    - name: Sqlite (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install sqlite3 libsqlite3-dev

    - name: Sqlite (windows)
      if: matrix.os == 'windows-latest'
      run: |
          choco install 7zip
          mkdir C:\sqlite
          CD /D C:\sqlite
          curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
          7z e sqlite3.zip -y
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
          set PATH=%PATH%;C:\sqlite

    - name: Build
      working-directory: ./backend
      run: cargo build --verbose

    - name: Test
      working-directory: ./backend
      run: cargo test --verbose

  lint:
    name: lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - name: Format check
      working-directory: ./backend
      run: cargo fmt --all -- --check

    - name: Clippy
      working-directory: ./backend
      run: cargo clippy -- -D warnings
